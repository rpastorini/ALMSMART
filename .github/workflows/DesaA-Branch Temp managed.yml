name: Desa A - Branch Temp managed
# Exportar solución desde Desa A - Administrada
# unpack y preparar, confirmar y generar una branch git con los cambios
on:
  workflow_dispatch:
    inputs:
      # Change this value
      solution_name:
        description: 'Nombre de la solución. Sería la full o la mini, TBD'
        required: true
        default: SLASOL
       #Do Not change these values
      solution_exported_folder:
        description: 'nombre de la carpeta para almacenar la solución exportada *no cambiar*.'
        required: true
        default: out/exported/
      solution_folder:
        description: 'Preparación de la carpeta de la solución desempaquetada antes del registro *no modificar*.'
        required: true
        default: out/solutions/
      solution_target_folder: 
       description: 'nombre de la carpeta que debe crearse y registrarse *no modificar*.'
       required: true
       default: solutions/
env:
#edit your values here
  ENVIRONMENT_URL: 'https://dev330rs.crm.dynamics.com/'
  CLIENT_ID: 'a6179c2f-6dab-4113-860b-62423845a814'
  TENANT_ID: 'ab7e124e-3be3-41ef-a0f4-9b9b8c703eef'
permissions:
  contents: write
jobs:
  exportar-desaA:
    runs-on: windows-latest
    # or you can say runs-on: ubuntu-latest
    env:
      RUNNER_DEBUG: 1

    steps:
    - uses: actions/checkout@v4
      with:
        lfs: true
        
  # - name: Install Power Platform Tools
   #  uses: microsoft/powerplatform-actions/actions-install@v1.3.0

    - name: who-am-i action
      uses: microsoft/powerplatform-actions/who-am-i@v1.3.0
      with:
        environment-url: ${{env.ENVIRONMENT_URL}}
        app-id: ${{env.CLIENT_ID}}
        client-secret: ${{ secrets.PowerPlatformSPN }}
        tenant-id: ${{env.TENANT_ID}}

    - name: export-solution action
      uses: microsoft/powerplatform-actions/export-solution@v1.3.0
      with:
        environment-url: ${{env.ENVIRONMENT_URL}}
        app-id: ${{env.CLIENT_ID}}
        client-secret: ${{ secrets.PowerPlatformSPN }}
        tenant-id: ${{env.TENANT_ID}}
        solution-name: ${{ github.event.inputs.solution_name }}
        solution-output-file: ${{ github.event.inputs.solution_exported_folder}}/${{ github.event.inputs.solution_name }}_managed.zip
        managed: true

    - name: unpack-solution action
      uses: microsoft/powerplatform-actions/unpack-solution@v1.3.0
      with:
        solution-file: ${{ github.event.inputs.solution_exported_folder}}/${{ github.event.inputs.solution_name }}_managed.zip
        solution-folder: ${{ github.event.inputs.solution_folder}}/${{ github.event.inputs.solution_name }}
        solution-type: 'Managed'
        overwrite-files: true

    - name: branch-solution, prepare it for a PullRequest
      uses: microsoft/powerplatform-actions/branch-solution@v1.3.0
      with:
        solution-folder: ${{ github.event.inputs.solution_folder}}/${{ github.event.inputs.solution_name }}
        solution-target-folder: ${{ github.event.inputs.solution_target_folder}}/${{ github.event.inputs.solution_name }}
        repo-token: ${{ secrets.GITHUB_TOKEN }}
        allow-empty-commit: true
