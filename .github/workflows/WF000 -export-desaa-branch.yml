name: export-solution-desde-desaa > branch
# Export solution from DESAA a branch managed-unmanaged. 
#  unpack it and prepare, commit and push a git branch with the changes

on:
  #workflow_dispatch:
  workflow_call:
    inputs:
      # Change this value
      solution_name:
        description: 'name of the solution to worked on from Power Platform'
        type: string
        required: true
        default: DEMOSOL01
       #Do Not change these values
      solution_exported_folder:
        description: 'folder name for staging the exported solution *do not change*'
        type: string
        required: true
        default: /out
      solution_folder:
        description: 'staging the unpacked solution folder before check-in *do not change*'
        type: string
        required: true
        default: /solution
      solution_target_folder: 
       description: 'folder name to be created and checked in *do not change*'
       type: string
       required: true
       default: solution   
      BUILD_ENVIRONMENT_URL:
        description: 'Build environment url.'
        type: string
        required: true   
      PRODUCTION_ENVIRONMENT_URL: 
        description: 'Production environment url'
        type: string
        required: true
      CLIENT_ID: 
        description: 'The client id'
        type: string
        required: true
      TENANT_ID: 
        description: 'The tenant id'
        type: string
        required: true
 
    secrets:
      envSecret:
        description: 'The secret value for authentication using SPN'
        required: true

permissions:
  contents: write

jobs:
  export-from-desaA:
    runs-on: windows-latest
    # or you can say runs-on: ubuntu-latest
    env:
      RUNNER_DEBUG: 1

    steps:
    - uses: actions/checkout@v4
      with:
        lfs: true

    - uses: microsoft/powerplatform-actions/actions-install@v1

    - name: who-am-i action
      uses: microsoft/powerplatform-actions/who-am-i@v1
      with:
        environment-url: ${{inputs.BUILD_ENVIRONMENT_URL}}
        app-id: ${{inputs.CLIENT_ID}}
        client-secret: ${{ secrets.envSecret }}
        tenant-id: ${{inputs.TENANT_ID}}  
      
    - name: export-solution action -unmanaged
      uses: microsoft/powerplatform-actions/export-solution@v1
      with:
        environment-url: ${{imputs.BUILD_ENVIRONMENT_URL}}
        app-id: ${{inputs.CLIENT_ID}}
        client-secret: ${{ secrets.envSecret }}
        tenant-id: ${{inputs.TENANT_ID}}
        solution-name: ${{ github.event.inputs.solution_name }}
        solution-output-file: ${{ github.event.inputs.solution_exported_folder}}/${{ github.event.inputs.solution_name }}.zip

    - name: export-solution action -managed
      uses: microsoft/powerplatform-actions/export-solution@v1
      with:
        environment-url: ${{inputs.BUILD_ENVIRONMENT_URL}}
        app-id: ${{inputs.CLIENT_ID}}
        client-secret: ${{ secrets.envSecret }}
        tenant-id: ${{inputs.TENANT_ID}}
        solution-name: ${{ github.event.inputs.solution_name }}
        managed: true
        solution-output-file: ${{ github.event.inputs.solution_exported_folder}}/${{ github.event.inputs.solution_name }}_managed.zip

    - name: unpack-solution action
      uses: microsoft/powerplatform-actions/unpack-solution@v1
      with:
        solution-file: ${{ github.event.inputs.solution_exported_folder}}/${{ github.event.inputs.solution_name }}.zip
        solution-folder: ${{ github.event.inputs.solution_folder}}/${{ github.event.inputs.solution_name }}
        solution-type: 'Both'
        overwrite-files: true

    - name: branch-solution
      uses: microsoft/powerplatform-actions/branch-solution@v1
      with:
        branch-name: TEMP_BRANCH_desaA
        solution-folder: ${{ github.event.inputs.solution_folder}}/${{ github.event.inputs.solution_name }}
        solution-target-folder: ${{ github.event.inputs.solution_target_folder}}/${{ github.event.inputs.solution_name }}
        repo-token: ${{ secrets.GITHUB_TOKEN }}
        allow-empty-commit: true
